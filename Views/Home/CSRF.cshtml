@{
    ViewData["Title"] = "CSRF Demo";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/app.css" />
</head>
<body>

    <h1 style="text-align: center; margin-bottom: 40px;">üß™ CSRF Demo</h1>

    <div class="container">
        <!-- Vulnerable Functionality -->
        <div class="box">
            <h2>Update your Email Id via a Cross Site Request üòâ: </h2>
            <form method="POST">
                <label for="email">Email:</label>
                <input type="hidden" name="id" value="1">
                    <input type="email" name="email" id="email" required>
                <br/>
                <button class="btn btn-primary" type="submit">Submit</button>
            </form>

        </div>

        <!-- Secure Coding Challenge -->
        <div class="box">
            <h2>üîê Secure the Code</h2>
            <p>This page is vulnerable to <strong>Cross Site Request Forgery (CSRF).</strong></p>
            <p>Your task is to find the line that causes this and fix it.</p>
            <button class="btn btn-outline-dark mt-2" onclick="openCodePopup()">üïµÔ∏è Identify Vulnerability</button>
        </div>
    </div>

    <div style="text-align: center; margin-top: 25px;">
        <h6>Email: @ViewData["Email"]</h6>
    </div>

    <div style="text-align: center; margin-top: 25px;">
        <h6>Note: You may need to run the application over <strong>HTTPS</strong>, since browsers only send <strong>"SameSite:None"</strong> cookies when using HTTPS.</h6>
    </div>

    <div style="text-align: center; margin-top: 25px;">
        <h6>In order to complete the lab set "csrfLab" to true in appsettings.json. Run the command: <strong>dotnet dev-certs https --trust</strong> then start the app with <strong>dotnet run --launch-profile "https"</strong>.</h6>
    </div>

    <h6 style="margin: 25px;">More Information:</h6>
    <ul>
        <li>
            <a href="https://owasp.org/www-community/attacks/csrf">OWASP - CSRF</a>
        </li>
        <li>
            <a href="https://portswigger.net/web-security/csrf">Portswigger - CSRF</a>
        </li>
        <li>
            <a href="https://learn.microsoft.com/en-us/aspnet/core/security/anti-request-forgery?view=aspnetcore-9.0">Microsoft - CSRF in Asp.NET Core</a>
        </li>
    </ul>

    <!-- First Modal -->
    <div id="codeModal" class="modal">
    <div class="modal-content">
        <h3>üîç Analyze the Code</h3>
        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVuln(this, 1)"> builder.Services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)</div>
        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVuln(this, 2)"> &nbsp;&nbsp;.AddCookie(options =&gt;</div>
        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVuln(this, 3)"> &nbsp;&nbsp;{</div>
        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVuln(this, 4)"> &nbsp;&nbsp;&nbsp;&nbsp;options.LoginPath = "/Account/Login";</div>
        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVuln(this, 5)"> &nbsp;&nbsp;&nbsp;&nbsp;options.LogoutPath = "/Account/Logout";</div>
        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVuln(this, 6)"> &nbsp;&nbsp;&nbsp;&nbsp;options.Cookie.SameSite = SameSiteMode.None;</div>
        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVuln(this, 7)"> &nbsp;&nbsp;&nbsp;&nbsp;options.Cookie.SecurePolicy = CookieSecurePolicy.Always;</div>
        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVuln(this, 8)"> &nbsp;&nbsp;});</div>

        <br />
        <button onclick="closeCodePopup()">Close</button>
    </div>
    </div>

    <!-- Diff Modal -->
    <div id="diffModal" class="diff-modal">
    <div class="diff-content">
        <h3>‚úÖ Secure Version</h3>

        <div class="diff-line removed">- options.Cookie.SameSite = SameSiteMode.None;</div>

        <div class="diff-line added">+ // Prefer Lax so auth cookie is not sent on cross-site POST request</div>
        <div class="diff-line added">+ options.Cookie.SameSite = SameSiteMode.Lax;</div>

        <br />
        <button onclick="closeDiffPopup()">Close</button>
    </div>
    </div>

    <script src="~/js/csrf.js"></script>

</body>
</html>
