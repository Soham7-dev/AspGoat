@model List<string>
@{
    ViewData["Title"] = "Sql Injection Demo";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/app.css" />
</head>
<body>

    <h1 style="text-align: center; margin-bottom: 40px;">üß™ Sql Injection Demo</h1>

    <div class="container">
        <!-- Vulnerable Functionality -->
        <div class="box">
            <h2>Gone are the days of basic SQLi ‚Äî it's time to check your headers.</h2>
        </div>

        <!-- Secure Coding Challenge -->
        <div class="box">
            <h2>üîê Secure the Code</h2>
            <p>This page is vulnerable to <strong>SQL Injection.</strong></p>
            <p>Your task is to find the line that causes this and fix it.</p>
            <button class="btn btn-outline-dark mt-2" onclick="openCodePopup()">üïµÔ∏è Identify Vulnerability</button>
        </div>
    </div>

    <div style="text-align: center; margin: 25px">
        <h6>@ViewData["UserName"]'s last Login IP is @ViewData["LastLoginIP"]</h6>
    </div>

    <h6 style="margin: 25px;">More Information:</h6>
    <ul>
        <li>
            <a href="https://owasp.org/www-community/attacks/SQL_Injection">OWASP - SQL Injection</a>
        </li>
        <li>
            <a href="https://portswigger.net/web-security/sql-injection">Portswigger - SQL Injection</a>
        </li>
        <li>
            <a href="https://www.acunetix.com/websitesecurity/sql-injection/">Acunetix - SQL Injection</a>
        </li>
    </ul>

    <!-- First Modal -->
    <div id="codeModal" class="modal">
    <div class="modal-content">
        <h3>üîç Analyze the Code</h3>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 1)">
        <span>string ip = Request.Headers["X-Forwarded-For"].ToString();</span>
        </div>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 2)">
        <span>if (String.IsNullOrEmpty(ip)) ip = "127.0.0.1";</span>
        </div>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 3)">
        <span>var _connString = _config.GetConnectionString("DefaultConnection");</span>
        </div>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 4)">
        <span>using var conn = new SqliteConnection(_connString); conn.Open();</span>
        </div>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 5)">
        <span>string query = "SELECT * FROM Users " + "WHERE LastLoginIP = '" + ip + "'";</span>
        </div>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 6)">
        <span>using var cmd = new SqliteCommand(query, conn);</span>
        </div>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 7)">
        <span>using var reader = cmd.ExecuteReader();</span>
        </div>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 8)">
        <span>if (reader.Read()) {</span>
        </div>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 9)">
        <span>&nbsp;&nbsp;ViewData["Id"] = reader["Id"].ToString();</span>
        </div>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 10)">
        <span>&nbsp;&nbsp;ViewData["UserName"] = reader["UserName"].ToString();</span>
        </div>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 11)">
        <span>&nbsp;&nbsp;ViewData["PasswordHash"] = reader["PasswordHash"].ToString();</span>
        </div>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 12)">
        <span>&nbsp;&nbsp;ViewData["Email"] = reader["Email"].ToString();</span>
        </div>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 13)">
        <span>&nbsp;&nbsp;ViewData["LastLoginIP"] = reader["LastLoginIP"].ToString();</span>
        </div>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 14)">
        <span>&nbsp;&nbsp;ViewData["Role"] = reader["Role"].ToString();</span>
        </div>

        <div class="popup-line"><input type="checkbox" class="code-checkbox" onchange="checkVulnerability(this, 15)">
        <span>}</span>
        </div>

        <br />
        <button onclick="closeCodePopup()">Close</button>
    </div>
    </div>

    <!-- Diff Modal -->
    <div id="diffModal" class="diff-modal">
    <div class="diff-content">
        <h3>‚úÖ Secure Version</h3>

        <div class="diff-line removed">- string query = "SELECT * FROM Users " + "WHERE LastLoginIP = '" + ip + "'";</div>
        <div class="diff-line removed">- using var cmd = new SqliteCommand(query, conn);</div>

        <div class="diff-line added">+ // Use parameterized queries.</div>
        <div class="diff-line added">+ string query = "SELECT * FROM Users WHERE LastLoginIP = @@ip";</div>
        <div class="diff-line added">+ using var cmd = new SqliteCommand(query, conn);</div>
        <div class="diff-line added">+ cmd.Parameters.AddWithValue("@@ip", ip);</div>
        <div class="diff-line added">+ using var reader = cmd.ExecuteReader();</div>

        <br />
        <button onclick="closeDiffPopup()">Close</button>
    </div>
    </div>

    <script src="~/js/sqli.js"></script>

</body>
</html>